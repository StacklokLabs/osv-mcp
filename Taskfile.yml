version: '3'

vars:
  BINARY_NAME: osv-mcp-server
  BUILD_DIR: build
  MAIN_PKG: ./cmd/server
  KO_DOCKER_REPO: ghcr.io/stackloklabs/osv-mcp

tasks:
  default:
    desc: Display available tasks
    cmds:
      - task -l

  build:
    desc: Build the application
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - go build -o {{.BUILD_DIR}}/{{.BINARY_NAME}} {{.MAIN_PKG}}
    sources:
      - '**/*.go'
    generates:
      - '{{.BUILD_DIR}}/{{.BINARY_NAME}}'

  run:
    desc: Run the application
    deps: [build]
    cmds:
      - ./{{.BUILD_DIR}}/{{.BINARY_NAME}} {{.CLI_ARGS}}

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  lint:
    desc: Run linters
    cmds:
      - golangci-lint run ./...

  fmt:
    desc: Format code
    cmds:
      - go fmt ./...

  tidy:
    desc: Tidy and verify go.mod
    cmds:
      - go mod tidy
      - go mod verify

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.BUILD_DIR}}

  ko-build:
    desc: Build container image with ko
    env:
      KO_DOCKER_REPO: '{{.KO_DOCKER_REPO}}'
    cmds:
      - ko build --platform=linux/amd64 --base-import-paths {{.MAIN_PKG}} -t latest

  ko-run:
    desc: Run container built with ko
    env:
      KO_DOCKER_REPO: '{{.KO_DOCKER_REPO}}'
    cmds:
      - ko run --platform=linux/amd64 --base-import-paths {{.MAIN_PKG}} -- {{.CLI_ARGS}}

  ko-publish:
    desc: Publish container image with ko
    env:
      KO_DOCKER_REPO: '{{.KO_DOCKER_REPO}}'
    cmds:
      - ko publish --platform=linux/amd64 --base-import-paths {{.MAIN_PKG}} -t latest

  all:
    desc: Run all tasks (fmt, lint, test, build)
    cmds:
      - task: fmt
      - task: lint
      - task: test
      - task: build